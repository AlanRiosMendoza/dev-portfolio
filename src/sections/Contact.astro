---
import { data } from "@/data.ts";
import PhoneIcon from "@/assets/svg/phoneIcon.svg";
import EmailIcon from "@/assets/svg/emailIcon.svg";
import ContactIcon from "@/assets/svg/contactIcon.svg";
---

<section class="scroll-mt-17 px-4 sm:px-6 md:px-0" id="contacto">
    <h2
        class="flex items-center gap-2 text-2xl font-semibold text-gray-900 dark:text-gray-100 mb-6"
    >
        <ContactIcon />Contacto
    </h2>

    <div
        class="flex flex-col md:flex-row rounded-xl border border-white/10 bg-white/20 dark:bg-gray-900/40 backdrop-blur-md p-6 sm:p-8 shadow-md transition-transform duration-300 hover:scale-[1.01] hover:shadow-xl"
    >
        <!-- Formulario -->
        <form
            class="flex flex-col gap-4 text-gray-900 dark:text-white w-full md:w-1/2 md:pr-6"
            id="contact-form"
        >
            <input
                type="text"
                name="name"
                placeholder="Tu nombre"
                required
                class="px-4 py-3 rounded-lg bg-white/70 dark:bg-gray-800 border border-white/20 focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500"
            />

            <input
                type="email"
                name="email"
                placeholder="Tu correo"
                required
                class="px-4 py-3 rounded-lg bg-white/70 dark:bg-gray-800 border border-white/20 focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500"
            />

            <textarea
                name="message"
                rows="5"
                placeholder="Tu mensaje"
                required
                class="px-4 py-3 rounded-lg bg-white/70 dark:bg-gray-800 border border-white/20 resize-none focus:outline-none focus:ring-2 focus:ring-indigo-400 dark:focus:ring-indigo-500"
            ></textarea>

            <button
                type="submit"
                class="w-full sm:self-center px-6 py-2 rounded-lg bg-indigo-600 text-white hover:bg-indigo-700 transition-colors"
            >
                Enviar mensaje
            </button>
        </form>

        <div class="my-6 md:my-0 md:mx-6">
            <div class="h-px w-full bg-gray-300 dark:bg-gray-700 md:hidden">
            </div>
            <div
                class="w-px h-full bg-gray-300 dark:bg-gray-700 hidden md:block"
            >
            </div>
        </div>

        <!-- Información de contacto -->
        <div
            class="flex flex-col gap-4 text-gray-800 dark:text-gray-200 w-full md:w-1/2 items-center md:items-start lg:items-center"
        >
            <h3 class="text-xl font-semibold">Contáctame</h3>

            <div class="w-full flex flex-col items-center gap-4">
                {
                    data.contact.contacts
                        .filter(
                            (contact) =>
                                contact.name.toLowerCase() !== "whatsapp",
                        )
                        .map((contact) => (
                            <button
                                id={`copy-${contact.name}`}
                                class="flex items-center w-full gap-2 border-2 border-indigo-600 rounded-lg px-6 py-2 hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors justify-center"
                                onclick={`copyText('${contact.url}', '${contact.name}', 'copy-${contact.name}')`}
                            >
                                <svg width="16" height="16">
                                    <use xlink:href={contact.icon} />
                                </svg>
                                {contact.url}
                            </button>
                        ))
                }

                <!-- Redes sociales -->
                <div
                    class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full justify-items-center"
                >
                    {
                        data.contact.socials.map((social) => (
                            <a
                                href={social.url}
                                target="_blank"
                                rel="noopener noreferrer"
                                aria-label={social.name}
                                class="flex items-center w-full gap-3 border-2 border-indigo-600 rounded-lg px-6 py-2 hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors justify-center"
                            >
                                <svg width="16" height="16">
                                    <use xlink:href={social.icon} />
                                </svg>
                                <span>{social.name}</span>
                            </a>
                        ))
                    }
                </div>
            </div>
        </div>
    </div>

    <script is:inline>
        function copyText(text, label = "Texto") {
            navigator.clipboard
                .writeText(text)
                .then(() => {
                    window.showMessage?.({
                        title: "Copiado",
                        description: `${label} copiado al portapapeles.`,
                        type: "success",
                    });
                })
                .catch(() => {
                    window.showMessage?.({
                        title: "Error",
                        description: `No se pudo copiar el ${label.toLowerCase()}.`,
                        type: "error",
                    });
                });
        }

        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("contact-form");

            form.addEventListener("submit", async (event) => {
                event.preventDefault();

                const formData = new FormData(form);
                const jsonData = {};
                formData.forEach((value, key) => {
                    jsonData[key] = value;
                });

                if (!jsonData.name || !jsonData.email || !jsonData.message) {
                    window.showMessage({
                        title: "Campos incompletos",
                        description:
                            "Por favor, completa todos los campos antes de enviar.",
                        type: "error",
                    });
                    return;
                }

                try {
                    const response = await fetch("/api/contact", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(jsonData),
                    });

                    const data = await response.json();

                    if (data.success) {
                        window.showMessage({
                            title: "Mensaje enviado",
                            description:
                                "Tu mensaje ha sido enviado correctamente.",
                            type: "success",
                        });
                        form.reset();
                    } else {
                        window.showMessage({
                            title: "Error al enviar",
                            description:
                                data.message ||
                                "Por favor, inténtalo de nuevo más tarde.",
                            type: "error",
                        });
                    }
                } catch (error) {
                    window.showMessage({
                        title: "Error de conexión",
                        description:
                            "No se pudo enviar el mensaje. Por favor, inténtalo de nuevo más tarde.",
                        type: "error",
                    });
                }
            });
        });
    </script>
</section>
